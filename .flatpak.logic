# Remove any existing Aurora Flatpak Setup block from .bashrc
sed -i '/# >>> Aurora Flatpak Setup >>>/,/# <<< Aurora Flatpak Setup <<</d' "$HOME/.bashrc"

# Append the Aurora block with unique start/end markers
cat << 'EOF' >> "$HOME/.bashrc"
# >>> Aurora Flatpak Setup >>>
flatpak() {
  case "$1" in
    ""|--help|-h|help|--version)
      command flatpak "$@"
      ;;
    install)
      if [[ "$*" == *"com.valvesoftware.Steam"* ]]; then
        echo "${RED}Installing com.valvesoftware.Steam is blocked to protect your Steam install.${RESET}"
        return 1
      fi
      command flatpak --user "$@"
      ;;
    *)
      command flatpak --user "$@"
      ;;
  esac
}

aurora() {
  local AURORA_SCRIPT="$HOME/opt/bin/aurora"

  "$AURORA_SCRIPT" "$@"

  case "$1" in
    display|cursor)
      if [ -x "$AURORA_SCRIPT" ]; then
        source <("$AURORA_SCRIPT" print-env)
      fi
      ;;
  esac
}

[[ -L "$BIN_DIR/npm" || -e "$BIN_DIR/npm" ]] || ln -s "$NPM_BASE/bin/npm-cli.js" "$BIN_DIR/npm"
[[ -L "$BIN_DIR/npx" || -e "$BIN_DIR/npx" ]] || ln -s "$NPM_BASE/bin/npx-cli.js" "$BIN_DIR/npx"
ln -sf "$HOME/opt/bin/starman" "$HOME/opt/bin/yay"
ln -sf "$HOME/opt/bin/starman" "$HOME/opt/bin/paru"
ln -sf "$HOME/opt/bin/starman" "$HOME/opt/bin/pacaur"
yay() { starman "$@"; }
paru() { starman "$@"; }

flatpak --user list --columns=application,name | tail -n +1 | sort -u > "$HOME/.starman_flatpak_cache"
# <<< Aurora Flatpak Setup <<<
EOF
